[gd_resource type="ShaderMaterial" load_steps=5 format=2]

[ext_resource path="res://scenes/Game/Terrain/GrassSystem/Grass_1.png" type="Texture" id=1]

[sub_resource type="Shader" id=1]
code = "shader_type spatial;
render_mode blend_mix,depth_draw_opaque,cull_disabled,diffuse_burley,specular_schlick_ggx,unshaded;
uniform vec4 albedo : hint_color;
uniform sampler2D texture_albedo : hint_albedo;
uniform sampler2D wind_flow_map : hint_albedo;
uniform float alpha_scissor_threshold;
uniform vec2 wind_direction = vec2(0.5, 0.5);

void vertex() {
	float wind_freq = length(wind_direction);
	vec2 wind_noise = texture(wind_flow_map, vec2(wind_direction.x + TIME, wind_direction.y + TIME)).rg - vec2(0.5, 0.5);
	wind_noise *= wind_freq;
	
	VERTEX.x += (wind_direction.x + sin(TIME + wind_noise.x)) * COLOR.r; // 0.5 * sin(TIME * wind_freq + wind_noise.x) * COLOR.r;
	VERTEX.z += wind_direction.y * COLOR.r; //  0.5 * cos(TIME * wind_freq + wind_noise.y) * COLOR.r;
	VERTEX.y -= 0.1 * COLOR.r;
}

void fragment() {
	vec2 base_uv = UV;
	vec4 albedo_tex = texture(texture_albedo,base_uv);
	float reduced_black = mix(0.1, 1.0, COLOR.r);
	albedo_tex *= vec4(reduced_black, reduced_black, reduced_black, 1.0); //COLOR;
	ALBEDO = albedo.rgb * albedo_tex.rgb;
	ALPHA = albedo_tex.a;
	ALPHA_SCISSOR=alpha_scissor_threshold;
}
"

[sub_resource type="OpenSimplexNoise" id=2]
seed = 456

[sub_resource type="NoiseTexture" id=3]
seamless = true
noise = SubResource( 2 )

[resource]
shader = SubResource( 1 )
shader_param/albedo = Color( 0.0588235, 0.705882, 0.145098, 1 )
shader_param/alpha_scissor_threshold = 0.98
shader_param/wind_direction = Vector2( 0.5, 0.5 )
shader_param/texture_albedo = ExtResource( 1 )
shader_param/wind_flow_map = SubResource( 3 )
